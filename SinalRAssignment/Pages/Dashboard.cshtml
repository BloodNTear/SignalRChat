@page
@model SinalRAssignment.Pages.DashboardModel
@{
}

<div class="container-fluid">
	<div class="row">
		<div class="col-md-3">
			<h3>Chat Groups</h3>

			<ul class="list-group" id="userGroup"></ul>

		</div>
		<div class="col-md-9">

			<div class="d-flex justify-content-end">
				<button type="button" class="btn btn-outline-primary" id="settings-button">
					<i class="bi bi-gear">Settings</i>
				</button>
			</div>


			<h3 style="text-align:center">Messages</h3>

			<div id="messages-container"></div>

			<div id="message-input-container">
				<div id="message-input-group">
					<input type="text" id="messageInput" class="form-control" placeholder="Type your message here">
					<button type="submit" id="send-button" class="btn btn-primary" onclick="send('@Model.User.DisplayName')">Send</button>
				</div>
			</div>
		</div>
	</div>
</div>

@*Modal dialog*@
<div class="modal fade" id="settings-modal" tabindex="-1" aria-labelledby="settings-modal-label" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="settings-modal-label">Chat Settings</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="mb-3">
					<label for="new-member-combobox" class="form-label">Add new member for this chat:</label>
					<div class="input-group">
						<select class="form-select" id="new-member-combobox">
							<option value="">Select a member to add</option>
							<!-- Add options dynamically using JavaScript -->
						</select>
						<button type="button" class="btn btn-primary" id="add-member-button">Add</button>
					</div>
				</div>
				<div class="mb-3">
					<label for="remove-member-combobox" class="form-label">Remove chat member from this group:</label>
					<div class="input-group">
						<select class="form-select" id="remove-member-combobox">
							<option value="">Select a member to remove</option>
							<!-- Add options dynamically using JavaScript -->
						</select>
						<button type="button" class="btn btn-danger" id="remove-member-button">Remove</button>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" id="delete-button">Delete this chat</button>
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

@*Add and remove member script*@
<script>

	function addMember() {
		var newMemberSelect = document.getElementById("new-member-combobox");
		var selectedValue = newMemberSelect.value;

		$.ajax({
			url: "/Dashboard?handler=AddUser",
			data: {
				groupName: currentGroup.groupName,
				userId: selectedValue
			},
			type: "GET",
			dataType: "json",
			success: function (response) {
				if (response.status) {
					alert("Add Successfully");
				} else {
					alert("Error: " + response.errorMessage);
				}
			},
			error: function (xhr, textStatus, errorThrown) {
				alert("Error: " + errorThrown);
			}
		});

		reloadPage();
	}

	function removeMember() {
		var newMemberSelect = document.getElementById("remove-member-combobox");
		var selectedValue = newMemberSelect.value;

		$.ajax({
			url: "/Dashboard?handler=RemoveUser",
			data: {
				groupName: currentGroup.groupName,
				userId: selectedValue
			},
			type: "GET",
			dataType: "json",
			success: function (response) {
				if (response.status) {
					alert("Add Successfully");
				} else {
					alert("Error: " + response.errorMessage);
				}
			},
			error: function (xhr, textStatus, errorThrown) {
				alert("Error: " + errorThrown);
			}
		});

		reloadPage();
	}

	function reloadPage() {
		location.reload();
	}
</script>

@*Modal Dialog Script*@
<script>
  // Define the function that shows the modal dialog
  function showSettingsModal() {
    // Clear the options of the combo boxes
    document.getElementById("new-member-combobox").innerHTML = '<option value="">Select a member to add</option>';
    document.getElementById("remove-member-combobox").innerHTML = '<option value="">Select a member to remove</option>';

	//Get options for add User
		$.ajax({
			url: "/Dashboard?handler=AvailableUsers",
			data: { groupName: currentGroup.groupName }, // Replace with the actual group name
			type: "GET",
			dataType: "json",
			success: function (response) {
				if (response.status) {
					var accounts = JSON.parse(response.data);
					var newMemberSelect = document.getElementById("new-member-combobox");

					for (var i = 0; i < accounts.length; i++) {
						var option = document.createElement("option");
						option.value = accounts[i].UserID;
						option.text = accounts[i].DisplayName;

						newMemberSelect.appendChild(option);
					}
				} else {
					alert("Error: " + response.errorMessage);
				}
			},
			error: function (xhr, textStatus, errorThrown) {
				alert("Error: " + errorThrown);
			}
		});
	//Get options for remove User
		$.ajax({
			url: "/Dashboard?handler=GroupUsers",
			data: { groupName: currentGroup.groupName }, // Replace with the actual group name
			type: "GET",
			dataType: "json",
			success: function (response) {
				if (response.status) {
					var accounts = JSON.parse(response.data);
					var removeMemberSelect = document.getElementById("remove-member-combobox");

					for (var i = 0; i < accounts.length; i++) {
						var option = document.createElement("option");
						option.value = accounts[i].UserID;
						option.text = accounts[i].DisplayName;

						removeMemberSelect.appendChild(option.cloneNode(true));
					}
				} else {
					alert("Error: " + response.errorMessage);
				}
			},
			error: function (xhr, textStatus, errorThrown) {
				alert("Error: " + errorThrown);
			}
		});

    // Show the modal dialog
    var modal = new bootstrap.Modal(document.getElementById("settings-modal"), {});
    modal.show();
  }
  // Register the click event of the "Settings" button
  document.getElementById("settings-button").addEventListener("click", showSettingsModal);
  document.getElementById("add-member-button").addEventListener("click", addMember);
  document.getElementById("remove-member-button").addEventListener("click", removeMember);
</script>

@*Signal R Connection*@
<script>
	const connection = new signalR.HubConnectionBuilder()
		.withUrl("/chathub")
		.build();

	connection.on("ReceiveMessage", function (user, message) {
		handleReceiveMessage(user, message);
	});

	connection.start().then(function () {
		// Connection established
	}).catch(function (err) {
		console.error(err.toString());
	});

	connection.on("UserJoined", function (user) {
		//handle change group
	});

	function sendMessage(user, message) {
		connection.invoke("SendMessage", user, message).catch(function (err) {
			console.error(err.toString());
		});
	}

	function sendGroupMessage(user, message, groupName) {

		connection.invoke("SendGroupMessage", user, message, groupName).catch(function (err) {
			console.error(err.toString());
		});
	}

	function joinOtherGroup(user, groupName) {
		connection.invoke("JoinGroup", user, groupName).catch(function (err) {
			console.error(err.toString());
		});
	}
</script>

@*Onclick Functions*@
<script>
	//function send(user) {
	//	sendMessage(user, $('#messageInput').val());
	//	$('#messageInput').val("");
	//}

	function send(user) {
		sendGroupMessage(user, $('#messageInput').val(), currentGroup.groupName);
		$('#messageInput').val("");
	}

	function changeGroup(groupName) {

		var tempList = $.grep(groups, function (group) {
			return group.groupName === groupName;
		});

		currentGroup = tempList[0];

		$('#userGroup').children().each(function () {
			if ($(this).html() == groupName) {
				$(this).addClass('selectedChatBox');
			}
			else {
				$(this).removeClass('selectedChatBox');
			}
		});

		renderMessage(currentGroup.groupName);

		joinOtherGroup('@Model.User.DisplayName', groupName);

	}
</script>

@*Hanlde Receive*@
<script>
	function handleReceiveMessage(user, message) {

		var messageRow = $('<div></div>').addClass('message-row');

		var usernameDiv = $('<div></div>').addClass('username').css('vertical-align', 'central').text(user == '@Model.User.DisplayName' ? '' : user);

		var messageDiv = $('<div></div>').addClass(user == '@Model.User.DisplayName' ? 'message user' : 'message other').text(message);

		messageRow.append(usernameDiv).append(messageDiv);

		$('#messages-container').append(messageRow);
	}
</script>

@*Document Ready render*@
<script>
	var groups = [];
	var currentGroup;

	$(document).ready(OnLoadAjax);

	function OnLoadAjax() {
		$.ajax({
			url: "/Dashboard?handler=UsersGroups",
			type: "GET",
			success: function (result) {
				if (result.status) {
					var chatGroups = JSON.parse(result.data);
					// Iterate over the chatGroups array using a for...of loop
					for (const group of chatGroups) {
						groups.push({
							groupName: group.GroupName,
							users: group.Accounts,
							messages: group.Messages
						});
					}

					//Set Current Group
					currentGroup = groups[0];

					// Append the group names to the existing <ul> element
					$.each(groups, function (i, v) {
						var groupName = v.groupName;
						var listItem = $('<li></li>').addClass('list-group-item').text(groupName);

						// Add onClick function to the listItem
						listItem.click(function () {
							changeGroup(groupName); // Call the changeGroup function with the groupName parameter
						});

						$('#userGroup').append(listItem);
					});

					changeGroup(currentGroup.groupName);

					//Render message
					renderMessage(currentGroup.groupName);

				} else {
					alert(result.errorMessage);
				}
			},
			error: function (xhr, status, error) {
				console.error(xhr.responseText);
			}
		});
	}

	function renderMessage(groupName) {

		$.ajax({
			url: "/Dashboard?handler=GroupMessages",
			type: "GET",
			data: {
				groupName : currentGroup.groupName
			},
			success: function (result) {
				if (result.status) {

					currentGroup.messages = JSON.parse(result.data);

					$('#messages-container').empty();

					currentGroup.messages.sort(function (a, b) {
						return new Date(a.MessageTime) - new Date(b.MessageTime);
					});

					$.each(currentGroup.messages, function (j, message) {
						var messageRow = $('<div></div>').addClass('message-row');
						var usernameDiv = $('<div></div>').addClass('username').css('vertical-align', 'central').text(message.username);
						var messageDiv = $('<div></div>').addClass(message.FromAccount.DisplayName == '@Model.User.DisplayName' ? 'message user' : 'message other').text(message.MessageContent);

						messageRow.append(usernameDiv).append(messageDiv);
						$('#messages-container').append(messageRow);
					});
				}else{
					alert(result.errorMessage);
				}
			},
			error: function (xhr, status, error) {
				console.error(xhr.responseText);
			}
		});
	}

</script>




